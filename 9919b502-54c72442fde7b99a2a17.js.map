{"version":3,"file":"9919b502-54c72442fde7b99a2a17.js","mappings":"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","sources":["webpack://uxp-indesign/./node_modules/@adobe/gatsby-theme-aio/src/components/SideNav/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { isBrowser,   findSelectedTopPage,\n  findSelectedTopPageMenu,\n  rootFix,\n  rootFixPages, isExternalLink, getExternalLinkProps, MOBILE_SCREEN_WIDTH } from '../../utils';\nimport { css } from '@emotion/react';\nimport classNames from 'classnames';\nimport '@spectrum-css/sidenav';\nimport nextId from 'react-id-generator';\nimport { ChevronRight, CheckMark } from '../Icons';\nimport { AnchorButton } from '../AnchorButton';\n\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(\n    findSelectedTopPage(pathWithRootFix, pagesWithRootFix)\n  );\n  let tempArr = pathWithRootFix.split('/');\n  let inx = tempArr.indexOf('use-cases');\n  if (selectedIndex === -1 && inx > -1) {\n    tempArr[inx + 1] = 'agreements-and-contracts';\n    tempArr[inx + 2] = 'sales-proposals-and-contracts';\n    if (tempArr[inx + 3] == undefined) {\n      tempArr.push('');\n    }\n    let tempPathName = tempArr.join('/');\n    selectedIndex = pagesWithRootFix.indexOf(findSelectedTopPage(tempPathName, pagesWithRootFix));\n  }\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n  return selectedIndex;\n};\n\nconst SideNav = ({versions, mainNavPages, selectedPages, selectedSubPages, setShowSideNav, location }) => {\n  const [expandedPages, setExpandedPages] = useState([]);\n  const [expandedMenus, setExpandedMenus] = useState([]);\n  const [sideNavClick, setSideNavClick] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n  const [selectedMenuItem, setSelectedMenuItem] = useState({});\n\n  // If one page has header enabled, use header navigation type for all navigation items\n  const hasHeader = selectedSubPages.some(page => page.header);\n  const isMultiLevel = selectedSubPages.some(page => page?.pages?.length > 0);\n  const ref = useRef(null);\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      // reset it when user did not click on the side nav.\n      setSideNavClick(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, mainNavPages);\n    const pathWithRootFix = rootFix(location.pathname);\n    setSelectedMenuItem(findSelectedTopPageMenu(pathWithRootFix, mainNavPages[index]));\n  }, [location.pathname])\n\n  useEffect(() => {\n    if (window.innerWidth <= parseInt(MOBILE_SCREEN_WIDTH)) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= parseInt(MOBILE_SCREEN_WIDTH)) {\n        setMobileView(true);\n      } else {\n        setMobileView(false);\n      }\n    });\n  }, []);\n\n  const renderSubtree = (pages, level) =>\n    pages\n      .filter(page => page.title)\n      .map((page, index) => {\n        const isSelected = selectedPages.find(selectedItem => selectedItem === page);\n        const id = nextId();\n        const pageHref = page.href ? page.href : page.menu[0].href;\n\n        if (isSelected && !sideNavClick && !expandedPages.includes(pageHref)) {\n          setExpandedPages(pages => [...pages, pageHref]);\n        }\n\n        return (\n          <li\n            key={index}\n            role=\"treeitem\"\n            aria-level={level}\n            aria-expanded={page.header || expandedPages.includes(pageHref)}\n            css={css`\n              &:not(.is-expanded) .spectrum-SideNav {\n                display: none;\n              }\n\n              &:first-of-type .spectrum-SideNav-heading {\n                margin-top: 0;\n              }\n            `}\n            className={classNames([\n              'spectrum-SideNav-item',\n              { 'is-expanded': page.header || expandedPages.includes(pageHref) },\n              { 'is-selected': selectedPages[selectedPages.length - 1] === page && isSelected },\n            ])}>\n            {page.header ? (\n              <h2 className=\"spectrum-SideNav-heading\" id={id}>\n                {page.title}\n              </h2>\n            ) : isExternalLink(pageHref) ? (\n              <a\n                {...getExternalLinkProps(pageHref)}\n                href={pageHref}\n                className=\"spectrum-SideNav-itemLink\">\n                {page.title}\n              </a>\n            ) : (\n              <GatsbyLink\n                onClick={() => {\n                  setSideNavClick(true);\n                  if (page?.pages?.length && !page.header) {\n                    if (expandedPages.includes(pageHref)) {\n                      setExpandedPages(pages => pages.filter(href => href !== pageHref));\n                    } else {\n                      setExpandedPages([...expandedPages, pageHref]);\n                    }\n                  } else {\n                    setShowSideNav(false);\n                  }\n                }}\n                to={pageHref}\n                className=\"spectrum-SideNav-itemLink\">\n                {page.title}\n                {page.pages && page.pages.length > 0 ? (\n                  <ChevronRight\n                    css={css`\n                      position: absolute;\n                      right: 0px;\n                      width: var(--spectrum-global-dimension-size-125) !important;\n                      height: var(--spectrum-global-dimension-size-125) !important;\n                      margin-left: var(--spectrum-global-dimension-size-100);\n                      transition: transform var(--spectrum-global-animation-duration-100)\n                        ease-in-out;\n                      ${expandedPages.includes(pageHref) && `transform: rotate(90deg);`}\n                    `}\n                  />\n                ) : null}\n              </GatsbyLink>\n            )}\n            {page.pages && (\n              <ul\n                className=\"spectrum-SideNav\"\n                role=\"group\"\n                css={css`\n                  ${level > 1\n                    ? `\n                    & > li > a {\n                      padding-left: calc(${\n                        level + 1\n                      } * var(--spectrum-global-dimension-size-150)) !important;\n                    }\n                  `\n                    : ''}\n                `}\n                {...(page.heading ? { 'aria-labelledby': id } : {})}>\n                {renderSubtree(page.pages, level + 1)}\n              </ul>\n            )}\n          </li>\n        );\n      });\n\n  const renderMenuTree = (pages, level) =>\n    pages\n      .filter(page => page.title)\n      .map((page, index) => {\n        const isSelected = selectedPages.find(selectedItem => selectedItem === page);\n        const id = nextId();\n        const pageHref = page.href ? page.href : `#${page.title.toLowerCase()}`;\n\n        if (isSelected && !sideNavClick && !expandedMenus.includes(pageHref)) {\n          setExpandedMenus(pages => [...pages, pageHref]);\n        }\n\n        return (\n          <li\n            key={index}\n            role=\"treeitem\"\n            aria-level={level}\n            aria-expanded={page.header || expandedMenus.includes(pageHref)}\n            css={css`\n              &:not(.is-expanded) .spectrum-SideNav {\n                display: none;\n              }\n\n              &:first-of-type .spectrum-SideNav-heading {\n                margin-top: 0;\n              }\n            `}\n            className={classNames([\n              'spectrum-SideNav-item',\n              { 'is-expanded': page.header || expandedMenus.includes(pageHref) },\n              { 'is-selected': selectedPages[selectedPages.length - 1] === page && isSelected },\n            ])}>\n            {page.header ? (\n              <h2 className=\"spectrum-SideNav-heading\" id={id}>\n                {page.title}\n              </h2>\n            ) : isExternalLink(pageHref) ? (\n              <a\n                {...getExternalLinkProps(pageHref)}\n                href={pageHref}\n                className=\"spectrum-SideNav-itemLink\">\n\n                {page.title}\n              </a>\n            ) : (\n              <GatsbyLink\n                onClick={() => {\n                  setSideNavClick(true);\n                  if (page?.menu?.length && !page.header) {\n                    if (expandedMenus.includes(pageHref)) {\n                      setExpandedMenus(pages => pages.filter(href => href !== pageHref));\n                    } else {\n                      setExpandedMenus([...expandedMenus, pageHref]);\n                    }\n                  } else {\n                    setShowSideNav(false);\n                  }\n                }}\n                to={pageHref}\n                className=\"spectrum-SideNav-itemLink\">\n                { selectedMenuItem === page  && <CheckMark /> }\n                {page.title}\n                {page.menu && page.menu.length > 0 ? (\n                  <ChevronRight\n                    css={css`\n                      position: absolute;\n                      right: 0px;\n                      width: var(--spectrum-global-dimension-size-125) !important;\n                      height: var(--spectrum-global-dimension-size-125) !important;\n                      margin-left: var(--spectrum-global-dimension-size-100);\n                      transition: transform var(--spectrum-global-animation-duration-100)\n                        ease-in-out;\n                      ${expandedMenus.includes(pageHref) && `transform: rotate(90deg);`}\n                    `}\n                  />\n                ) : null}\n              </GatsbyLink>\n            )}\n            {page.menu && (\n              <ul\n                className=\"spectrum-SideNav\"\n                role=\"group\"\n                css={css`\n                  ${level > 1\n                    ? `\n                    & > li > a {\n                      padding-left: calc(${\n                        level + 1\n                      } * var(--spectrum-global-dimension-size-150)) !important;\n                    }\n                  `\n                    : ''}\n                `}\n                {...(page.heading ? { 'aria-labelledby': id } : {})}>\n                {renderMenuTree(page.menu, level + 1)}\n              </ul>\n            )}\n          </li>\n        );\n      });\n\n  return (\n    <nav\n      ref={ref}\n      id=\"side-menu\"\n      role=\"navigation\"\n      aria-label=\"Primary\"\n      css={css`\n        margin-top: var(--spectrum-global-dimension-size-800);\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          margin-top: var(--spectrum-global-dimension-size-400);\n        }\n      `}>\n      <div\n        css={css`\n          box-sizing: border-box;\n          padding: var(--spectrum-global-dimension-size-400);\n          overflow: auto;\n          height: calc(100vh - var(--spectrum-global-dimension-size-800));\n        `}>\n        {/* The section below is the alternative top menu */}\n        {mobileView && (\n          <>\n            <p>Global Navigation</p>\n            <ul\n              role=\"tree\"\n              aria-label=\"Global Navigation\"\n              className={classNames('spectrum-SideNav', 'spectrum-SideNav--multiLevel')}>\n              {versions && renderMenuTree([{title: 'Versions', menu: versions}], 1)}\n              {renderMenuTree(mainNavPages, 1)}\n              <AnchorButton variant=\"primary\" href=\"/console\" id={'consoleId'} tabIndex=\"0\">\n                Console\n              </AnchorButton>\n            </ul>\n            {selectedSubPages.length > 0 && (\n              <>\n                <hr></hr>\n                <p>Table of contents</p>\n              </>\n            )}\n          </>\n        )}\n\n        {/* The section below is what used to be the sidenav with documentation subpages */}\n        {selectedSubPages.length > 0 && (\n          <ul\n            role=\"tree\"\n            aria-label=\"Table of contents\"\n            className={classNames('spectrum-SideNav', {\n              'spectrum-SideNav--multiLevel': isMultiLevel && !hasHeader,\n            })}>\n            {renderSubtree(selectedSubPages, 1)}\n          </ul>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nSideNav.propTypes = {\n  mainNavPages: PropTypes.array,\n  versions: PropTypes.array,\n  selectedPages: PropTypes.array,\n  selectedSubPages: PropTypes.array,\n  setShowSideNav: PropTypes.func,\n};\n\nexport { SideNav };\n"],"names":["_ref","name","styles","_ref2","_ref3","SideNav","_ref4","versions","mainNavPages","selectedPages","selectedSubPages","setShowSideNav","location","expandedPages","setExpandedPages","useState","expandedMenus","setExpandedMenus","sideNavClick","setSideNavClick","mobileView","setMobileView","selectedMenuItem","setSelectedMenuItem","hasHeader","some","page","header","isMultiLevel","_page$pages","pages","length","ref","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","index","getSelectedTabIndex","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","tempArr","split","inx","undefined","push","tempPathName","join","findSelectedTopPageMenu","window","innerWidth","parseInt","MOBILE_SCREEN_WIDTH","renderSubtree","level","filter","title","map","isSelected","find","selectedItem","id","nextId","pageHref","href","menu","includes","concat","_toConsumableArray","___EmotionJSX","key","role","css","className","classNames","isExternalLink","_extends","getExternalLinkProps","GatsbyLink","onClick","_page$pages2","to","ChevronRight","heading","renderMenuTree","toLowerCase","_page$menu","CheckMark","React","AnchorButton","variant","tabIndex"],"sourceRoot":""}