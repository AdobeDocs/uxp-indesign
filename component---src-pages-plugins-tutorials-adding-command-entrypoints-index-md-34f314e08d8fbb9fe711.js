"use strict";(self.webpackChunkuxp_indesign=self.webpackChunkuxp_indesign||[]).push([[5510],{76637:function(n,e,t){t.r(e),t.d(e,{_frontmatter:function(){return p},default:function(){return u}});var a=t(87462),i=t(45987),o=(t(15007),t(64983)),d=t(91515);const m=["components"],p={},s=(l="InlineAlert",function(n){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",n)});var l;const r={_frontmatter:p},c=d.Z;function u(n){let{components:e}=n,t=(0,i.Z)(n,m);return(0,o.mdx)(c,(0,a.Z)({},r,t,{components:e,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"adding-command-entrypoints-to-your-plugin"},"Adding command entrypoints to your plugin"),(0,o.mdx)("p",null,"Command entrypoints are the most common type of entrypoint. They allow you to add commands to the InDesign user interface. When the user runs a command, your plugin can perform a variety of actions, such as opening a dialog and changing the document."),(0,o.mdx)("h2",{id:"adding-a-command-entrypoint-to-the-manifest"},"Adding a command entrypoint to the manifest"),(0,o.mdx)("p",null,"In your ",(0,o.mdx)("inlineCode",{parentName:"p"},"manifest.json")," file, register a new ",(0,o.mdx)("inlineCode",{parentName:"p"},"command"),"-type entrypoint:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    // ...\n    entrypoints: [\n        {\n            type: "command",\n            id: "myCommand",\n            label: "My Command",\n        }\n    ]\n}\n')),(0,o.mdx)("p",null,"This will add a new command entrypoint with the ID ",(0,o.mdx)("inlineCode",{parentName:"p"},'"myCommand"')," (this will be important later) to your plugin. It will show up as ",(0,o.mdx)("em",{parentName:"p"},"My Command")," in the InDesign user interface."),(0,o.mdx)("h2",{id:"adding-a-function-to-handle-the-command"},"Adding a function to handle the command"),(0,o.mdx)("p",null,"Now, we need some code that gets run when the command gets triggered. In your ",(0,o.mdx)("inlineCode",{parentName:"p"},"index.js")," file, add a function to handle the command:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function myCommandHandler() {\n    // Do something\n}\n")),(0,o.mdx)("p",null,"Note that the name of the function doesn't matter. You can name it whatever you want."),(0,o.mdx)("h2",{id:"associating-the-command-entrypoint-with-the-command-handler"},"Associating the command entrypoint with the command handler"),(0,o.mdx)("p",null,"There are two ways to add a command entrypoint to your plugin's code."),(0,o.mdx)("h3",{id:"method-1-setup-entrypoints-using-the-uxp-api"},"Method 1: Setup entrypoints using the UXP API"),(0,o.mdx)("p",null,"In your JavaScript code (for example, in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"index.js"),", add the following code:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'const { entrypoints } = require("uxp");\n\nentrypoints.setup({\n    commands: {\n        myCommand: myCommandHandler\n    }\n});\n')),(0,o.mdx)("p",null,"Note that ",(0,o.mdx)("inlineCode",{parentName:"p"},"myCommand")," is the ID of the command entrypoint we registered in the manifest."),(0,o.mdx)(s,{slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"You can only call ",(0,o.mdx)("inlineCode",{parentName:"p"},"entrypoints.setup()")," once. If you call it more than once, it will throw an error. If you need to add more entrypoints, you need to add them all at once."),(0,o.mdx)("h3",{id:"method-2-javascript-based-main-file"},"Method 2: JavaScript-based main file"),(0,o.mdx)("p",null,"Another method you can use that's especially useful for smaller plugins that only contain command entrypoints is to use a JavaScript-based main file (instead of an HTML file)."),(0,o.mdx)("p",null,"To do so, in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"manifest.json")," file, set the ",(0,o.mdx)("inlineCode",{parentName:"p"},"main")," property to the path of your ",(0,o.mdx)("inlineCode",{parentName:"p"},"index.js")," file:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    // ...\n    main: "index.js",\n    // ...\n}\n')),(0,o.mdx)("p",null,"Then, in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"index.js")," file, add the following code:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n    commands: {\n        myCommand: myCommandHandler\n    }\n};\n")),(0,o.mdx)("p",null,"Note that ",(0,o.mdx)("inlineCode",{parentName:"p"},"myCommand")," is the ID of the command entrypoint we registered in the manifest."),(0,o.mdx)("p",null,"Now, the HTML file is no longer needed. You can delete it. This is especially useful when converting scripts to plugins."),(0,o.mdx)("h2",{id:"conclusion"},"Conclusion"),(0,o.mdx)("p",null,"That's it! You've added a command entrypoint to your plugin. When you now load your plugin, you should see a new command called ",(0,o.mdx)("em",{parentName:"p"},"My Command")," in the ",(0,o.mdx)("strong",{parentName:"p"},"Plugins")," menu:"),(0,o.mdx)("figure",null,"\n  ",(0,o.mdx)("span",{parentName:"figure",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"63.125%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/5530d/command-plugin.webp 320w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/0c8fb/command-plugin.webp 640w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/94b1e/command-plugin.webp 1280w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/0b34d/command-plugin.webp 1920w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/bfa38/command-plugin.webp 2080w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/dd4a7/command-plugin.png 320w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/0f09e/command-plugin.png 640w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/bbbf7/command-plugin.png 1280w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/ac7a9/command-plugin.png 1920w","/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/45416/command-plugin.png 2080w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/uxp-indesign/static/7623ecd5c62ef4d450238d0f37c90179/bbbf7/command-plugin.png",alt:"Screenshot of the Plugins menu with the My Command menu item highlighted",title:"Screenshot of the Plugins menu with the My Command menu item highlighted",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    "),"\n  ",(0,o.mdx)("figcaption",{parentName:"figure"},"The My Command menu item")),(0,o.mdx)("p",null,"When you click on it, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"myCommandHandler()")," function will run."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-plugins-tutorials-adding-command-entrypoints-index-md-34f314e08d8fbb9fe711.js.map