"use strict";(self.webpackChunkuxp_indesign=self.webpackChunkuxp_indesign||[]).push([[90149],{49221:function(e,t,r){r.r(t),r.d(t,{_frontmatter:function(){return u},default:function(){return l}});var n=r(87462),o=r(63366),a=(r(15007),r(64983)),m=r(91515),p=["components"],u={},i={_frontmatter:u},d=m.Z;function l(e){var t=e.components,r=(0,o.Z)(e,p);return(0,a.mdx)(d,(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"changeobjectpreference"},"ChangeObjectPreference"),(0,a.mdx)("p",null,"Change object preferences."),(0,a.mdx)("h2",{id:"instance"},"Instance"),(0,a.mdx)("blockquote",null,(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"transparencySettings")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Transparency settings. Can return: FindChangeTransparencySetting or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeTransparencySettings")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Transparency settings for the stroke. Can return: FindChangeStrokeTransparencySetting or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"fillTransparencySettings")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Transparency settings for the fill applied to the ChangeObjectPreference. Can return: FindChangeFillTransparencySetting or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"contentTransparencySettings")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Transparency settings for the content of the ChangeObjectPreference. Can return: FindChangeContentTransparencySetting or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"userModifiedWrap")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the text wrap path has been explicitly modified by the user. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,a.mdx)("strong",{parentName:"p"},"isValid")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Returns true if the object specifier resolves to valid objects."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Application ",(0,a.mdx)("strong",{parentName:"p"},"parent")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The parent of the ChangeObjectPreference (a Application)."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Preferences ",(0,a.mdx)("strong",{parentName:"p"},"preferences")," "),(0,a.mdx)("p",{parentName:"blockquote"},"A collection of preferences objects."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Events ",(0,a.mdx)("strong",{parentName:"p"},"events")," "),(0,a.mdx)("p",{parentName:"blockquote"},"A collection of events."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},(0,a.mdx)("em",{parentName:"p"},"Read Only")," "),(0,a.mdx)("p",{parentName:"blockquote"},"EventListeners ",(0,a.mdx)("strong",{parentName:"p"},"eventListeners")," "),(0,a.mdx)("p",{parentName:"blockquote"},"A collection of event listeners."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"storyDirection")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The direction of the story. Can return: StoryDirectionOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"positionReferencePoint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The point in the referenced object relative to which to position the anchored object. Notes: Valid only when anchored position is custom. Can return: AnchorPoint enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"applyToMasterPageOnly")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, text wraps on the master spread apply to that spread only, and not to any pages the master spread has been applied to. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textWrapSide")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Text wrap side options. Can return: TextWrapSideOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textWrapOffset")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The minimum space between text and the edges of the wrapped object. Specify four values in the format ","[top, left, bottom, right]",". . Can return: Ordered array containing top:Unit, left:Unit, bottom:Unit, right:Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textWrapMode")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The text wrap mode. . Can return: TextWrapModes enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"footnotesEnableOverrides")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, enable overrides to document footnote options. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"footnotesSpanAcrossColumns")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, enable straddling footnotes. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"footnotesMinimumSpacing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Minimum Spacing Before First Footnote. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"footnotesSpaceBetween")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Space between footnotes. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"appliedObjectStyles")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The applied object style(s). Can return: String or NothingEnum enumerator. Can also accept: ObjectStyle."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"fillColor")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the fill of the ChangeObjectPreference. . Can return: Swatch or NothingEnum enumerator. Can also accept: String."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"fillTint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The percent of tint to use in the ChangeObjectPreference's fill color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"overprintFill")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the ChangeObjectPreference's fill color overprints any underlying objects. If false, the fill color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeWeight")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The weight (in points) to apply to the ChangeObjectPreference's stroke. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"miterLimit")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The limit of the ratio of stroke width to miter length before a miter (pointed) join becomes a bevel (squared-off) join. Can return: Real (1 - 500) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"endCap")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The end shape of an open path. Can return: EndCap enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"endJoin")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The corner join applied to the ChangeObjectPreference. Can return: EndJoin enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The name of the stroke style to apply. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeCornerAdjustment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The corner adjustment applied to the ChangeObjectPreference. Can return: StrokeCornerAdjustment enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeDashAndGap")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The dash and gap measurements that define the pattern of a custom dashed line. Define up to six values (in points) in the format ","[dash1, gap1, dash2, gap2, dash3, gap3]",". Can return: Array of Units or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"leftLineEnd")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The arrowhead applied to the start of the path. . Can return: ArrowHead enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"rightLineEnd")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The arrowhead applied to the end of the path. Can return: ArrowHead enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeColor")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the stroke of the ChangeObjectPreference. Can return: Swatch or NothingEnum enumerator. Can also accept: String."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeTint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The percent of tint to use in object's stroke color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"overprintStroke")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the ChangeObjectPreference's stroke color overprints any underlying objects. If false, the stroke color knocks out the  underlying colors. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gapColor")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the gap of a dashed, dotted, or striped stroke. For information, see stroke type. Can return: Swatch or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gapTint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The tint as a percentage of the gap color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"overprintGap")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the gap color overprints any underlying colors. If false, the gap color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"strokeAlignment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The stroke alignment applied to the ChangeObjectPreference. Can return: StrokeAlignment enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"nonprinting")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the ChangeObjectPreference does not print. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gradientFillAngle")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The angle of a linear gradient applied to the fill of the ChangeObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gradientStrokeAngle")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The angle of a linear gradient applied to the stroke of the ChangeObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textColumnCount")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The number of columns in the text frame. Note: Depending on the value of use fixed column width, the number of columns can change automatically when the text frame size changes. Can return: Long Integer (1 - 40) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textColumnGutter")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The space between columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"textColumnFixedWidth")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The column width of the columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useFixedColumnWidth")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, maintains column width when the text frame is resized. If false, causes columns to resize when the text frame is resized. Note: When true, resizing the frame can change the number of columns in the frame. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"insetSpacing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount to offset text from the edges of the text frame, specified either as a single value applied uniformly to all sides of the text frame or as an array of 4 values in the format ","[top inset, left inset, bottom inset, right inset]",". Can return: Unit (0 - 8640 points), Array of 4 Units (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"firstBaselineOffset")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The distance between the baseline of the text and the top inset of the text frame or cell. Can return: FirstBaseline enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"minimumFirstBaselineOffset")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The minimum distance between the baseline of the text and the top inset of the text frame or cell. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"verticalJustification")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The vertical alignment of the text content. . Can return: VerticalJustification enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"verticalThreshold")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The maximum amount of vertical space between two paragraphs. Note: Valid only when vertical justification is justified; the specified amount is applied in addition to the space before or space after values defined for the paragraph. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"ignoreWrap")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, ignores text wrap settings for drawn or placed objects in the text frame. . Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useCustomBaselineFrameGrid")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, uses a custom baseline frame grid. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"startingOffsetForBaselineFrameGrid")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount to offset the baseline grid. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"baselineFrameGridRelativeOption")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The location (top of page, top margin, top of frame, or frame inset) on which to base the custom baseline grid. Can return: BaselineFrameGridRelativeOption enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"baselineFrameGridIncrement")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The distance between grid lines. Can return: Unit (1 - 8640 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"baselineFrameGridColor")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The grid line color, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals (0 - 255) or UIColors enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"inverse")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, inverts the text wrap. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"contourType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The contour type. Can return: ContourOptionsTypes enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"includeInsideEdges")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, creates interior clipping paths within the surrounding clipping path. Note: Valid only when clipping type is alpha channel or detect edges. . Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"anchoredPosition")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The position of the anchored object relative to the anchor. Can return: AnchorPosition enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"spineRelative")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, the position of the anchored object is relative to the binding spine of the page or spread. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"lockPosition")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, prevents manual positioning of the anchored object. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"pinPosition")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, pins the position of the anchored object within the text frame top and bottom. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"anchorPoint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The point in the anchored object to position. Can return: AnchorPoint enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"horizontalReferencePoint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The horizontal reference point on the page. Valid only when anchored position is custom. Can return: AnchoredRelativeTo enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"verticalReferencePoint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The vertical reference point on the page. Valid when anchored position is custom. Can return: VerticallyRelativeTo enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"anchorXoffset")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The horizontal (x) offset of the anchored object. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"anchorYoffset")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The vertical (y) offset of the anchored object. Corresponds to the space after property for above line positioning. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"anchorSpaceAbove")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The space above an above-line anchored object. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"opticalMarginAlignment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, adjust the position of characters at the edges of the frame to provide a better appearance. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"opticalMarginSize")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The point size used as the basis for calculating optical margin alignment. (Range: 0.1 to 1296). Can return: Unit (0.1 - 1296 points) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"leftCrop")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount in measurement units to crop the left edge of a graphic. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"topCrop")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount in measurement units to crop the top edge of a graphic. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"rightCrop")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount in measurement units to crop the right edge of a graphic. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"bottomCrop")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The amount in measurement units to crop the bottom edge of a graphic. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"fittingOnEmptyFrame")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The frame fitting option to apply to placed or pasted content if the frame is empty. Can be applied to a frame, object style, or document or to the application. Can return: EmptyFrameFittingOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"fittingAlignment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The point with which to align the image empty when fitting in a frame. For information, see frame fitting options. Can return: AnchorPoint enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"arrowHeadAlignment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The arrowhead alignment applied to the ChangeObjectPreference. Can return: ArrowHeadAlignmentEnum enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"leftArrowHeadScale")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The scaling applied to the arrowhead at the start of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"rightArrowHeadScale")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The scaling applied to the arrowhead at the end of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"topLeftCornerOption")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The shape to be applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes.Note: corner option differs from end join in which you can set a radius for a corner option, whereas the rounded or beveled effect of an end join depends on the stroke weight. Can return: CornerOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"topRightCornerOption")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The shape to apply to the top right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"bottomLeftCornerOption")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The shape to apply to the bottom left corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"bottomRightCornerOption")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The shape to apply to the bottom right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"topLeftCornerRadius")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The radius in measurement units of the corner effect applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"topRightCornerRadius")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The radius in measurement units of the corner effect applied to the top right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"bottomLeftCornerRadius")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The radius in measurement units of the corner effect applied to the bottom left corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"bottomRightCornerRadius")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The radius in measurement units of the corner effect applied to the bottom right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"autoSizingType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Auto-sizing type of text frame. Based on type, reference value is automatically adjusted. For example, for height only type, top-left reference point becomes top-center. Recommended to change auto-sizing type, after setting other auto-sizing attributes. Can return: AutoSizingTypeEnum enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"autoSizingReferencePoint")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The reference point for auto sizing of text frame. Reference point is automatically adjusted to the suitable value depending on the auto-sizing type value. As an example, top left reference point becomes top center for height only dimension. Can return: AutoSizingReferenceEnum enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useMinimumHeightForAutoSizing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, minimum height value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"minimumHeightForAutoSizing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The minimum height for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useMinimumWidthForAutoSizing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, minimum width value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"minimumWidthForAutoSizing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The minimum width for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useNoLineBreaksForAutoSizing")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, line-breaks are not introduced after auto sizing. . Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"preserveAppearanceFromLayout")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Preserve Appearance from Layout. Can return: PreserveAppearanceFromLayoutEnum enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"altTextSourceType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The source type of alternate text. Can return: SourceType enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"actualTextSourceType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The source type of actual text. Can return: SourceType enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"customAltText")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The custom alternate text entered by the user. Can return: String or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"customActualText")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The custom actual text entered by the user. Can return: String or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"altMetadataProperty")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The metadata property to use as source of alternate text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"actualMetadataProperty")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The metadata property to use as source of actual text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"applyTagType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The tag type of page item. Can return: TagType enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imageConversionType")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Allows user to select the image format for conversion. Can return: ImageFormat enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imageExportResolution")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The export resolution. Can return: ImageResolution enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gifOptionsPalette")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The color palette for GIF conversion. Note: Not valid when image conversion is JPEG. . Can return: GIFOptionsPalette enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"gifOptionsInterlaced")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, generates interlaced GIFs. Note: Not valid  when image conversion is JPEG. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"jpegOptionsQuality")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The quality of converted JPEG images. Note: Not valid when image conversion is GIF. . Can return: JPEGOptionsQuality enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"jpegOptionsFormat")," "),(0,a.mdx)("p",{parentName:"blockquote"},"The formatting method for converted JPEG images. Note: Not valid  when image conversion is GIF. Can return: JPEGOptionsFormat enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imageAlignment")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Alignment applied to images. Can return: ImageAlignmentType enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imageSpaceBefore")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Space Before applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imageSpaceAfter")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Space After applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"useImagePageBreak")," "),(0,a.mdx)("p",{parentName:"blockquote"},"If true, image page break settings will be used in objects. Can return: Boolean or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,a.mdx)("strong",{parentName:"p"},"imagePageBreak")," "),(0,a.mdx)("p",{parentName:"blockquote"},"Image page break settings to be used with objects. Can return: ImagePageBreakType enumerator or NothingEnum enumerator."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"Object ",(0,a.mdx)("strong",{parentName:"p"},"properties")," "),(0,a.mdx)("p",{parentName:"blockquote"},"A property that allows setting of several properties at the same time.")),(0,a.mdx)("h3",{id:"methods"},"Methods"),(0,a.mdx)("blockquote",null,(0,a.mdx)("p",{parentName:"blockquote"},"String ",(0,a.mdx)("strong",{parentName:"p"},"altText"),"()"),(0,a.mdx)("p",{parentName:"blockquote"},"Provides the alternate text for the object"),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"String ",(0,a.mdx)("strong",{parentName:"p"},"actualText"),"()"),(0,a.mdx)("p",{parentName:"blockquote"},"Provides the actual text for the object"),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"String ",(0,a.mdx)("strong",{parentName:"p"},"toSource"),"()"),(0,a.mdx)("p",{parentName:"blockquote"},"Generates a string which, if executed, will return the ChangeObjectPreference."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"ChangeObjectPreference ",(0,a.mdx)("strong",{parentName:"p"},"getElements"),"()"),(0,a.mdx)("p",{parentName:"blockquote"},"Resolves the object specifier, creating an array of object references."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"String ",(0,a.mdx)("strong",{parentName:"p"},"toSpecifier"),"()"),(0,a.mdx)("p",{parentName:"blockquote"},"Retrieves the object specifier."),(0,a.mdx)("hr",{parentName:"blockquote"}),(0,a.mdx)("p",{parentName:"blockquote"},"EventListener ",(0,a.mdx)("strong",{parentName:"p"},"addEventListener"),"( String ",(0,a.mdx)("strong",{parentName:"p"},"eventType"),", Mixed ",(0,a.mdx)("strong",{parentName:"p"},"handler"),", Boolean ",(0,a.mdx)("strong",{parentName:"p"},"captures")," )"),(0,a.mdx)("p",{parentName:"blockquote"},"Adds an event listener."),(0,a.mdx)("h4",{parentName:"blockquote",id:"parameters"},"Parameters"),(0,a.mdx)("table",{parentName:"blockquote"},(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Name"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"eventType"),(0,a.mdx)("td",{parentName:"tr",align:null},"The event type.")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,a.mdx)("td",{parentName:"tr",align:null},"handler"),(0,a.mdx)("td",{parentName:"tr",align:null},"The event handler. Can accept: File or JavaScript Function.")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,a.mdx)("td",{parentName:"tr",align:null},"captures"),(0,a.mdx)("td",{parentName:"tr",align:null},"This parameter is obsolete. (Optional)"))))),(0,a.mdx)("hr",null),(0,a.mdx)("blockquote",null,(0,a.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,a.mdx)("strong",{parentName:"p"},"removeEventListener"),"( String ",(0,a.mdx)("strong",{parentName:"p"},"eventType"),", Mixed ",(0,a.mdx)("strong",{parentName:"p"},"handler"),", Boolean ",(0,a.mdx)("strong",{parentName:"p"},"captures")," )"),(0,a.mdx)("p",{parentName:"blockquote"},"Removes the event listener."),(0,a.mdx)("h4",{parentName:"blockquote",id:"parameters-1"},"Parameters"),(0,a.mdx)("table",{parentName:"blockquote"},(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Name"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"eventType"),(0,a.mdx)("td",{parentName:"tr",align:null},"The registered event type.")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,a.mdx)("td",{parentName:"tr",align:null},"handler"),(0,a.mdx)("td",{parentName:"tr",align:null},"The registered event handler. Can accept: File or JavaScript Function.")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,a.mdx)("td",{parentName:"tr",align:null},"captures"),(0,a.mdx)("td",{parentName:"tr",align:null},"This parameter is obsolete. (Optional)"))))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-omv-c-change-object-preference-index-md-1a678800c05337cc12ad.js.map