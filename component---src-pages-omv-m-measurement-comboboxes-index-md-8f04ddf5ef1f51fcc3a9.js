"use strict";(self.webpackChunkuxp_indesign=self.webpackChunkuxp_indesign||[]).push([[14374],{61115:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return d},default:function(){return u}});var m=a(87462),n=a(63366),r=(a(15007),a(64983)),o=a(91515),l=["components"],d={},p={_frontmatter:d},x=o.Z;function u(e){var t=e.components,a=(0,n.Z)(e,l);return(0,r.mdx)(x,(0,m.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"measurementcomboboxes"},"MeasurementComboboxes"),(0,r.mdx)("p",null,"A collection of measurement comboboxes."),(0,r.mdx)("h2",{id:"instance"},"Instance"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},(0,r.mdx)("em",{parentName:"p"},"Read Only")," "),(0,r.mdx)("p",{parentName:"blockquote"},"Number ",(0,r.mdx)("strong",{parentName:"p"},"length")," "),(0,r.mdx)("p",{parentName:"blockquote"},"The number of objects in the collection.")),(0,r.mdx)("h3",{id:"methods"},"Methods"),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"add"),"( Object ",(0,r.mdx)("strong",{parentName:"p"},"withProperties")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Creates a new MeasurementCombobox."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Object"),(0,r.mdx)("td",{parentName:"tr",align:null},"withProperties"),(0,r.mdx)("td",{parentName:"tr",align:null},"Initial values for properties of the new MeasurementCombobox (Optional)"))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Number ",(0,r.mdx)("strong",{parentName:"p"},"count"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Displays the number of elements in the MeasurementCombobox."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"item"),"( Mixed ",(0,r.mdx)("strong",{parentName:"p"},"index")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementCombobox with the specified index or name."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-1"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,r.mdx)("td",{parentName:"tr",align:null},"index"),(0,r.mdx)("td",{parentName:"tr",align:null},"The index or name. Can accept: Long Integer or String."))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"itemByID"),"( Number ",(0,r.mdx)("strong",{parentName:"p"},"id")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementCombobox with the specified ID."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-2"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Number"),(0,r.mdx)("td",{parentName:"tr",align:null},"id"),(0,r.mdx)("td",{parentName:"tr",align:null},"The ID."))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"itemByRange"),"( Mixed ",(0,r.mdx)("strong",{parentName:"p"},"from"),", Mixed ",(0,r.mdx)("strong",{parentName:"p"},"to")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementComboboxes within the specified range."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-3"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,r.mdx)("td",{parentName:"tr",align:null},"from"),(0,r.mdx)("td",{parentName:"tr",align:null},"The MeasurementCombobox, index, or name at the beginning of the range. Can accept: MeasurementCombobox, Long Integer or String.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,r.mdx)("td",{parentName:"tr",align:null},"to"),(0,r.mdx)("td",{parentName:"tr",align:null},"The MeasurementCombobox, index, or name at the end of the range. Can accept: MeasurementCombobox, Long Integer or String."))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"firstItem"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the first MeasurementCombobox in the collection."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"lastItem"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the last MeasurementCombobox in the collection."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"middleItem"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the middle MeasurementCombobox in the collection."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"previousItem"),"( MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"obj")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementCombobox with the index previous to the specified index."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-4"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"MeasurementCombobox"),(0,r.mdx)("td",{parentName:"tr",align:null},"obj"),(0,r.mdx)("td",{parentName:"tr",align:null},"The index of the MeasurementCombobox that follows the desired MeasurementCombobox."))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"nextItem"),"( MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"obj")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementCombobox whose index follows the specified MeasurementCombobox in the collection."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-5"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"MeasurementCombobox"),(0,r.mdx)("td",{parentName:"tr",align:null},"obj"),(0,r.mdx)("td",{parentName:"tr",align:null},"The MeasurementCombobox whose index comes before the desired MeasurementCombobox."))))),(0,r.mdx)("hr",null),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"anyItem"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns any MeasurementCombobox in the collection."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"everyItem"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns every MeasurementCombobox in the collection."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"String ",(0,r.mdx)("strong",{parentName:"p"},"toSource"),"()"),(0,r.mdx)("p",{parentName:"blockquote"},"Generates a string which, if executed, will return the MeasurementCombobox."),(0,r.mdx)("hr",{parentName:"blockquote"}),(0,r.mdx)("p",{parentName:"blockquote"},"MeasurementCombobox ",(0,r.mdx)("strong",{parentName:"p"},"[]"),"( Number ",(0,r.mdx)("strong",{parentName:"p"},"index")," )"),(0,r.mdx)("p",{parentName:"blockquote"},"Returns the MeasurementCombobox with the specified index."),(0,r.mdx)("h4",{parentName:"blockquote",id:"parameters-6"},"Parameters"),(0,r.mdx)("table",{parentName:"blockquote"},(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Number"),(0,r.mdx)("td",{parentName:"tr",align:null},"index"),(0,r.mdx)("td",{parentName:"tr",align:null},"The index."))))))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-omv-m-measurement-comboboxes-index-md-8f04ddf5ef1f51fcc3a9.js.map