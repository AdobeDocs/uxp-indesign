{"version":3,"file":"component---src-pages-plugins-tutorials-plugin-lifecycle-hooks-index-md-1a6f92d048cb86033511.js","mappings":"kRAMaA,EAAe,CAAC,EACvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,EACMI,EAAcN,EAAc,eAC5BO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBT,gBAEIU,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIV,GAAKY,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOV,EAAAA,EAAAA,KAACI,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBN,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,eAG5EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,2BAAyB,4BAEjCA,EAAAA,EAAAA,KAAA,kGACAA,EAAAA,EAAAA,KAACC,EAAW,CAACY,QAAQ,UAAUC,MAAM,sBAAsBF,QAAQ,iBACnEZ,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQe,WAAW,KAAG,eACzBf,EAAAA,EAAAA,KAAA,8JACwBA,EAAAA,EAAAA,KAAA,KAAGe,WAAW,IAClC,KAAQ,gCAA8B,sBACX,kEAC/Bf,EAAAA,EAAAA,KAAA,8GACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,mBAAmBL,QAAQ,eACjFZ,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMe,WAAW,MAClB,UAAa,eAAa,2dAqB9Bf,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMe,WAAW,MAClB,UAAa,iBAAe,8dAgCpC,CAEAT,EAAWY,gBAAiB,C","sources":["webpack://uxp-indesign/./src/pages/plugins/tutorials/plugin-lifecycle-hooks/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign/uxp-indesign/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"plugin-lifecycle-events\"\n    }}>{`Plugin Lifecycle events`}</h1>\n    <p>{`You can detect whether or not your plugin panel is visible with the help of UXP APIs`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text1, text2, text3\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`IMPORTANT`}</strong></p>\n    <p>{`This is only applicable to plugins with a panel. You cannot detect the execution of a command plugin via these hooks.\nFamiliarize yourself with `}<a parentName=\"p\" {...{\n        \"href\": \"../../concepts/entry-points/\"\n      }}>{`plugin entrypoints`}</a>{` to know the difference between a command and a panel plugin.`}</p>\n    <p>{`Also, for plugins that have multiple panels, you cannot differentiate between them, at present. `}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JavaScript, JSON\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const entrypoints = require(\"uxp\").entrypoints;\nentrypoints.setup({\n  panels: {\n    \"mainPanel\": {\n      create(rootNode) {\n        return new Promise(function (resolve, reject) {\n          console.log('Plugin panel created');\n          resolve();\n        });\n      },\n      destroy(rootNode) {\n        return new Promise(function (resolve, reject) {\n          console.log('Destroy panel');\n          resolve();\n        });\n      }\n    }\n  }\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"manifest\"\n    }}>{`manifest`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  /**/\n  \"entrypoints\": [{\n      \"type\": \"panel\",\n      \"id\": \"mainPanel\",\n      \"label\": \"My plugin\",\n      \"minimumSize\": {\n          \"width\": 400,\n          \"height\": 400\n      },\n      \"maximumSize\": {\n          \"width\": 800,\n          \"height\": 800\n      },\n      \"preferredDockedSize\": {\n          \"width\": 400,\n          \"height\": 400\n      },\n      \"preferredFloatingSize\": {\n          \"width\": 600,\n          \"height\": 600\n      }\n  }]\n}\n`}</code></pre>\n    {/* \n     ## Reference material\n     // TODO add links to API reference \n     */}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","variant","slots","parentName","repeat","languages","isMDXComponent"],"sourceRoot":""}