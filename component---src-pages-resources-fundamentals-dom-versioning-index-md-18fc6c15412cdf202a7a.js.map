{"version":3,"file":"component---src-pages-resources-fundamentals-dom-versioning-index-md-18fc6c15412cdf202a7a.js","mappings":"oRAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,qBAAmB,sBAE3BA,EAAAA,EAAAA,KAAA,qIACAA,EAAAA,EAAAA,KAACL,EAAW,CAACgB,QAAQ,OAAOC,MAAM,eAAeF,QAAQ,iBACzDV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,kBAA4B,qEACrDb,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,kBAA4B,0GAA0Gb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,aAA2B,MACpNb,EAAAA,EAAAA,KAAA,qEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,4EAI9Bb,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,gBAErBA,EAAAA,EAAAA,KAAA,qSACAA,EAAAA,EAAAA,KAAA,wDAAkDA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,8JACxEb,EAAAA,EAAAA,KAAA,uFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,yHAK9Bb,EAAAA,EAAAA,KAAA,+DACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,oDAG9Bb,EAAAA,EAAAA,KAAA,4FACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,QAAkB,kFAAkFb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,uBAAqC,2DAC5Lb,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,8OAM9Bb,EAAAA,EAAAA,KAAA,8FAAwFA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,wBAAsC,uGAAuGb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,eAA6B,0BACtTb,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,4FAI9Bb,EAAAA,EAAAA,KAAA,8DAAwDA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAClE,KAAQ,mCAAiC,iBACnB,8CAG9B,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://uxp-indesign/./src/pages/resources/fundamentals/dom-versioning/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign/uxp-indesign/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"indesign-dom-apis\"\n    }}>{`InDesign DOM APIs`}</h1>\n    <p>{`InDesign APIs (aka Document Object Model DOM or OMV) is used to create and modify the application document and content.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text1, text2\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Prior to v18.4`}</strong>{`, the InDesign DOM was available in the global space by default.`}</p>\n    <p><strong parentName=\"p\">{`Starting v18.4`}</strong>{`, InDesign DOM is available only as a JavaScript module and should be retrieved on a need basis using `}<inlineCode parentName=\"p\">{`require()`}</inlineCode>{`.`}</p>\n    <p>{`To access the InDesign DOM APIs from v18.4 onwards, use`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myInDesign = require(\"indesign\");\nconst app = myInDesign.app;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dom-version\"\n    }}>{`DOM version`}</h2>\n    <p>{`DOM versioning refers to the specific version of InDesign Document Object Model. By specifying a version, you can ensure that your script/plugin remains forward compatible, which means it will work with newer versions of InDesign, even if DOM has changed in subsequent releases. `}</p>\n    <p>{`The available DOM versions as of today are `}<strong parentName=\"p\">{`3.0, 4.0, 5.0, 6.0, 7.0, 7.5, 8.0, 9.0, 10.0, 10.1, 10.2, 11.0, 11.2, 11.3, 11.4, 12.0, 12.1, 13.0, 13.1, 14.0, 15.0, 15.1, 16.0, 16.1, 16.2, 17.0, 18.0`}</strong></p>\n    <p>{`To know which version of DOM API your app is currently using, you can use`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myInDesign = require(\"indesign\");\nconst app = myInDesign.app;\nconsole.log(app.scriptPreferences.version);\n`}</code></pre>\n    <p>{`To switch to a particular version of DOM API, use`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const myInDesign = require(\"indesign-16.1\");\n`}</code></pre>\n    <p>{`The above will make sure that going forward you will be using v16.1 DOM APIs. `}</p>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{` that if you retrieved a specific DOM version (let's assume 'A') and then did `}<inlineCode parentName=\"p\">{`require(\"indesign\")`}</inlineCode>{`, it will fetch the same DOM version 'A'. For example,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const inDesignAppV17 = require(\"indesign-17.0\").app;\nconst inDesignApp = require(\"indesign\").app;\n\nconsole.log(\\`Versions: \\${inDesignAppV17.scriptPreferences.version} and \\${inDesignApp.scriptPreferences.version} will be v17.0\\`);\n`}</code></pre>\n    <p>{`Also note that you cannot work with two different DOM versions at the same time. `}<inlineCode parentName=\"p\">{`require(\"indesign\");`}</inlineCode>{` assumes that there will be no further change in the DOM version. In the below example, the object `}<inlineCode parentName=\"p\">{`inDesignV17`}</inlineCode>{` will be 'undefined'.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const inDesign = require(\"indesign\");\nconst inDesignV17 = require(\"indesign-17.0\");\n`}</code></pre>\n    <p>{`Once you have the right DOM API version, use the `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-indesign/indesign/dom/api/\"\n      }}>{`API reference`}</a>{` to access available objects, methods etc.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}