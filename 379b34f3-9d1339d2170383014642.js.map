{"version":3,"file":"379b34f3-9d1339d2170383014642.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\n// const mapToIndexName = (searchIndex) => searchIndex.map((index) => Object.keys(index)[0]);\n\nconst searchSuggestions = async (algolia, query, searchIndex, indexAll) => {\n  const queries = [];\n  const algoliaIndexList = await algolia.listIndices();\n  const existingIndices = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n    return Object.values(indexAll).includes(indexName);\n  });\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = existingIndices;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...existingIndices.filter((index) => !searchProductNames.includes(index))].filter(index => existingIndices.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, selectedIndex, indexAll, keywords) => {\n  const algoliaIndexList = await algolia.listIndices();\n  const existingIndices = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n    return Object.values(indexAll).includes(indexName);\n  });\n  if (selectedIndex.includes('all')) {\n    selectedIndex = existingIndices;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => existingIndices.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, _highlightResult }) => {\n    let urlPath = ''\n    if (url.includes('https://developer.adobe.com')) {\n      urlPath = url.replace('https://developer.adobe.com', '');\n    } else {\n      urlPath = url;\n    }\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst Search = ({ algolia, searchIndex, indexAll, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n\n  const setTargetOrigin = () => {\n    const parentURL = document.referrer;\n\n    if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n      return parentURL;\n    } else {\n      return false;\n    }\n  };\n\n  const search = async () => {\n    if (searchQuery.length) {\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        setSelectedIndex(['all']);\n      }\n\n      const search = await searchIndexes(algolia, searchQuery, selectedIndex, indexAll, selectedKeywords);\n      const mappedProductResults = [searchIndex[1]];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== searchIndex[0]) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, searchIndex[0]);\n                }\n              }\n            }\n          }\n\n          if (searchQuery === oldSearchQuery) {\n            mapSearchResults(hits, mappedSearchResults);\n            mapKeywordResults(facets, mappedKeywordResults);\n          }\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n\n      setOldSearchQuery(searchQuery);\n    }\n  };\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    search();\n  }, [selectedIndex, selectedKeywords]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch, setTriggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          suggestionsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchSuggestionResults])\n\n    useEffect(() => {\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          searchResultsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              await search();\n              if (searchQuery !== oldSearchQuery) {\n                const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n                const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n                setSelectedIndex(localProductIndexes);\n              }\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n\n                  if (query.length && !searchResults.length) {\n                    setShowClear(true);\n\n                    const suggestions = await searchSuggestions(algolia, query, searchIndex, indexAll);\n\n                    if (suggestions?.results?.length) {\n                      const results = [];\n                      suggestions.results.forEach(({ hits }) => {\n                        mapSearchResults(hits, results);\n                      });\n                      setSearchSuggestionResults(results);\n\n                      if (!searchResults.length) {\n                        setShowSearchResults(false);\n                      }\n                    } else {\n                      setSearchSuggestionResults([]);\n                    }\n\n                    setIsSuggestionsOpen(true);\n                  } else {\n                    setShowClear(false);\n                    setIsSuggestionsOpen(false);\n                  }\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                `}\n                tabIndex=\"-1\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const content = searchSuggestion._highlightResult.content?.value ? searchSuggestion._highlightResult.content.value : \"\";\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                min-width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow: auto;\n                    max-height: 30%;\n  \n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow: auto;\n                    max-height: 50%;\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                        }}>\n                        <span>{keyword}</span>\n                        <em>&nbsp;({keywordResult[keyword]})</em>\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const content = searchResult._highlightResult.content?.value ? searchResult._highlightResult.content.value : \"\";\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.object,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","searchSuggestions","algolia","query","searchIndex","indexAll","queries","listIndices","algoliaIndexList","existingIndices","Object","values","items","map","filter","indexName","includes","searchProductNames","product","localProductIndexes","getIndexesFromProduct","index","forEach","push","hitsPerPage","Math","ceil","length","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","selected","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","isLoading","setIsLoading","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","indexOf","parent","postMessage","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","useEffect","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","addEventListener","removeEventListener","onEscape","key","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","e","suggestions","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","title","content","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","productName","isSelected","some","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}