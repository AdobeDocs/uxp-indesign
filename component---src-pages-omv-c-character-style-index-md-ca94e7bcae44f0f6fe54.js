"use strict";(self.webpackChunkuxp_indesign=self.webpackChunkuxp_indesign||[]).push([[66950],{39695:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return u},default:function(){return i}});var r=a(87462),n=a(63366),o=(a(15007),a(64983)),m=a(91515),p=["components"],u={},l={_frontmatter:u},d=m.Z;function i(e){var t=e.components,a=(0,n.Z)(e,p);return(0,o.mdx)(d,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"characterstyle"},"CharacterStyle"),(0,o.mdx)("p",null,"A character style."),(0,o.mdx)("h2",{id:"instance"},"Instance"),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"imported")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the style was imported from another document. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Number ",(0,o.mdx)("strong",{parentName:"p"},"id")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The unique ID of the CharacterStyle."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,o.mdx)("strong",{parentName:"p"},"isValid")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Returns true if the object specifier resolves to valid objects."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"parent")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The parent of the CharacterStyle (a Document, Application or CharacterStyleGroup)."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Number ",(0,o.mdx)("strong",{parentName:"p"},"index")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The index of the CharacterStyle within its containing object."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"StyleExportTagMaps ",(0,o.mdx)("strong",{parentName:"p"},"styleExportTagMaps")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A collection of style export tag maps."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Events ",(0,o.mdx)("strong",{parentName:"p"},"events")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A collection of events."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Read Only")," "),(0,o.mdx)("p",{parentName:"blockquote"},"EventListeners ",(0,o.mdx)("strong",{parentName:"p"},"eventListeners")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A collection of event listeners."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"basedOn")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The style that this style is based on. Can return: CharacterStyle or String."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"splitDocument")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Split Document (EPUB only). Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"emitCss")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Emit CSS. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"styleUniqueId")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A unique id that can be assigned to a style. This can be used to differentiate between the styles. Internal use only. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"appliedFont")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The font applied to the CharacterStyle, specified as either a font object or the name of font family. Can return: Font, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"fontStyle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The name of the font style. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"pointSize")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The text size. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"leading")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The leading applied to the text. Can return: Unit, Leading enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kerningMethod")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The type of pair kerning. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"tracking")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount by which to loosen or tighten a block of text, specified in thousands of an em. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"capitalization")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The capitalization scheme. Can return: Capitalization enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"position")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The text position relative to the baseline. Can return: Position enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underline")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, underlines the text. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThru")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, draws a strikethrough line through the text. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"ligatures")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, replaces specific character combinations (e.g., fl, fi) with ligature characters. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"noBreak")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, keeps the text on the same line. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"horizontalScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The horizontal scaling applied to the CharacterStyle. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"verticalScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The vertical scaling applied to the CharacterStyle. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"baselineShift")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The baseline shift applied to the text. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"skew")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The skew angle of the CharacterStyle. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"fillTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the fill color of the CharacterStyle. (To specify a tint percentage, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strokeTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the stroke color of the CharacterStyle. (To specify a tint percentage, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strokeWeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke weight applied to the characters of the text. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"overprintStroke")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the stroke of the characters will overprint. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"overprintFill")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the fill color of the characters will overprint. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfFigureStyle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The figure style in OpenType fonts. Can return: OTFFigureStyle enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfOrdinal")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses ordinals in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfFraction")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses fractions in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfDiscretionaryLigature")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses discretionary ligatures in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfTitling")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses titling forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfContextualAlternate")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses contextual alternate forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfSwash")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses swash forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the underline stroke. . Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineGapColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the gap of the underline stroke. Note: Valid when underline type is not solid. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The underline stroke tint (as a percentage). (Range: 0 to 100). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineGapTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the gap color of the underline stroke. (Range: 0 to 100) Note: Valid when underline type is not solid. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineOverprint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the underline stroke color will overprint. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineGapOverprint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the gap color of the underline stroke will overprint. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineType")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke type of the underline stroke. Can return: StrokeStyle, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount by which to offset the underline from the text baseline. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"underlineWeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke weight of the underline stroke. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the strikethrough stroke. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughGapColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the gap of the strikethrough stroke. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the strikethrough stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughGapTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the strikethrough stroke gap color. (Range: 0 to 100) Note: Valid when strike through type is not solid. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughOverprint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the strikethrough stroke will overprint. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughGapOverprint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the gap color of the strikethrough stroke will overprint. Note: Valid when strike through type is not solid. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughType")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke type of the strikethrough stroke. Can return: StrokeStyle, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount by which to offset the strikethrough stroke from the text baseline. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strikeThroughWeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke weight of the strikethrough stroke. Can return: Unit or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"fillColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the fill of the CharacterStyle. . Can return: Swatch or NothingEnum enumerator. Can also accept: String."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strokeColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the stroke of the CharacterStyle. Can return: Swatch or NothingEnum enumerator. Can also accept: String."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"appliedLanguage")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The language of the text. Can return: LanguageWithVendors, Language or NothingEnum enumerator. Can also accept: String."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"includeClass")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, class attribute will be generated for the style. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"designAxes")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Value of Design Axes. Can return: Array of Reals or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfSlashedZero")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use a slashed zeroes in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfHistorical")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use historical forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfStylisticSets")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stylistic sets to use in OpenType fonts. Can return: Long Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientFillLength")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The length (for a linear gradient) or radius (for a radial gradient) applied to the fill of the text. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientFillAngle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The angle of a linear gradient applied to the fill of the text. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientStrokeLength")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The length (for a linear gradient) or radius (for a radial gradient) applied to the stroke of the text. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientStrokeAngle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The angle of a linear gradient applied to the stroke of the text. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientFillStart")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The starting point (in page coordinates) of a gradient applied to the fill of the text, in the format ","[x, y]",". Can return: Array of 2 Units or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"gradientStrokeStart")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The starting point (in page coordinates) of a gradient applied to the stroke of the text, in the format ","[x, y]",". Can return: Array of 2 Units or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfMark")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses mark positioning in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfLocale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses localized forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"positionalForm")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The OpenType positional form. Can return: PositionalForms enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"String ",(0,o.mdx)("strong",{parentName:"p"},"name")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The name of the style."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"previewColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The color to use for preview, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals (0 - 255) or UIColors enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"miterLimit")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The limit of the ratio of stroke width to miter length before a miter (pointed) join becomes a bevel (squared-off) join. Can return: Real (0 - 1000) or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"strokeAlignment")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke alignment applied to the text. Can return: TextStrokeAlign enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"endJoin")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke join type applied to the characters of the text. Can return: OutlineJoin enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfOverlapSwash")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use overlapping swash forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfStylisticAlternate")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use stylistic alternate forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfJustificationAlternate")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use alternate justification forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfStretchedAlternate")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, use stretched alternate forms in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"characterDirection")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The direction of the character. Can return: CharacterDirectionOptions enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"keyboardDirection")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The keyboard direction of the character. Can return: CharacterDirectionOptions enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"digitsType")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The digits type. Can return: DigitsTypeOptions enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kashidas")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Use of Kashidas for justification. Can return: KashidasOptions enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"diacriticPosition")," "),(0,o.mdx)("p",{parentName:"blockquote"},"Position of diacriticical characters. Can return: DiacriticPositionOptions enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"xOffsetDiacritic")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The x (horizontal) offset for diacritic adjustment. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"yOffsetDiacritic")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The y (vertical) offset for diacritic adjustment. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"characterAlignment")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The alignment of small characters to the largest character in the line. Can return: CharacterAlignment enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"tsume")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount of horizontal character compression. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"leadingAki")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount of space before each character. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"trailingAki")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount of space after each character. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"characterRotation")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The rotation angle (in degrees) of individual characters. Note: The rotation is counterclockwise. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"jidori")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The number of grid squares in which to arrange the text. . Can return: Short Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"shataiMagnification")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount (as a percentage) of shatai obliquing to apply. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"shataiDegreeAngle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The shatai lens angle (in degrees). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"shataiAdjustRotation")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, applies shatai rotation. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"shataiAdjustTsume")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, adjusts shatai tsume. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"tatechuyoko")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, makes the character horizontal in vertical text. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"tatechuyokoXOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The horizontal offset for horizontal characters in vertical text. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"tatechuyokoYOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The vertical offset for horizontal characters in vertical text. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenFillColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the fill of kenten characters. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenStrokeColor")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the stroke of kenten characters. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The fill tint (as a percentage) of kenten characters. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenStrokeTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke tint (as a percentage) of kenten characters. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenWeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke weight (in points) of kenten characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenOverprintFill")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The method of overprinting the kenten fill. Can return: AdornmentOverprint enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenOverprintStroke")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The method of overprinting the kenten stroke. Can return: AdornmentOverprint enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenKind")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The style of kenten characters. Can return: KentenCharacter enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenPlacement")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The distance between kenten characters and their parent characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenAlignment")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The alignment of kenten characters relative to the parent characters. . Can return: KentenAlignment enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenPosition")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The kenten position relative to the parent character. Can return: RubyKentenPosition enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenFont")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The font to use for kenten characters. Can return: Font, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenFontStyle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The font style of kenten characters. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenFontSize")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The size (in points) of kenten characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenXScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The horizontal size of kenten characters as a percent of the original size. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenYScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The vertical size of kenten charachers as a percent of the original size. . Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenCustomCharacter")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The character used for kenten. Note: Valid only when kenten kind is custom. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"kentenCharacterSet")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The character set used for the custom kenten character. Note: Valid only when kenten kind is custom. . Can return: KentenCharacterSet enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyFill")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the fill of ruby characters. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyStroke")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The swatch (color, gradient, tint, or mixed ink) applied to the stroke of ruby characters. Can return: Swatch, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The tint (as a percentage) of the ruby fill color. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyWeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke weight (in points) of ruby characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyOverprintFill")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The method of overprinting the ruby fill. Can return: AdornmentOverprint enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyOverprintStroke")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The method of overprinting the ruby stroke. Can return: AdornmentOverprint enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyStrokeTint")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The stroke tint (as a percentage) of ruby characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyFont")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The font applied to ruby characters. Can return: Font, String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyFontStyle")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The font style of ruby characters. Can return: String or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyFontSize")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The size (in points) of ruby characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyOpenTypePro")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses OpenType Pro fonts for ruby. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyXScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The horizontal size of ruby characters, specified as a percent of the original size. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyYScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The vertical size of ruby characters, specified as a percent of the original size. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyType")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The ruby type. Can return: RubyTypes enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAlignment")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The ruby alignment. Can return: RubyAlignments enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyPosition")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The position of ruby characters relative to the parent text. Can return: RubyKentenPosition enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyXOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount of horizontal space between ruby and parent characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyYOffset")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount of vertical space between ruby and parent characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyParentSpacing")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The ruby spacing relative to the parent text. . Can return: RubyParentSpacing enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAutoAlign")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, auto aligns ruby. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyOverhang")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, constrains ruby overhang to the specified amount. For information on specifying an amount, see ruby parent overhang amount. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAutoScaling")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, automatically scales ruby to the specified percent of parent text size. For information on specifying a percent, see ruby parent scaling percent. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyParentScalingPercent")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount (as a percentage) to scale the parent text size to determine the ruby text size. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyParentOverhangAmount")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount by which ruby characters can overhang the parent text. Can return: RubyOverhang enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichu")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, turns on warichu. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuSize")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The amount (as a percentage) to scale parent text size to determine warichu size. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuLines")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The number of lines of warichu within a single normal line. Can return: Short Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuLineSpacing")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The gap between lines of warichu characters. Can return: Real or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuAlignment")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The warichu alignment. Can return: WarichuAlignment enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuCharsAfterBreak")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The minimum number of characters allowed after a line break. . Can return: Short Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"warichuCharsBeforeBreak")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The minimum number of characters allowed before a line break. Can return: Short Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfProportionalMetrics")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, kerns according to proportional CJK metrics in OpenType fonts. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfHVKana")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, switches hiragana fonts, which have different glyphs for horizontal and vertical. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"otfRomanItalics")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, applies italics to half-width alphanumerics. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"scaleAffectsLineHeight")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, the line changes size when characters are scaled. . Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"cjkGridTracking")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, uses grid tracking to track non-Roman characters in CJK grids. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"glyphForm")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The glyph variant to substitute for standard glyphs. Can return: AlternateGlyphForms enumerator or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAutoTcyDigits")," "),(0,o.mdx)("p",{parentName:"blockquote"},"The number of digits included in auto tcy (tate-chuu-yoko) in ruby. Can return: Short Integer or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAutoTcyIncludeRoman")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, includes Roman characters in auto tcy (tate-chuu-yoko) in ruby. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Mixed ",(0,o.mdx)("strong",{parentName:"p"},"rubyAutoTcyAutoScale")," "),(0,o.mdx)("p",{parentName:"blockquote"},"If true, automatically scales glyphs in auto tcy (tate-chuu-yoko) in ruby to fit one em. Can return: Boolean or NothingEnum enumerator."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"String ",(0,o.mdx)("strong",{parentName:"p"},"label")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A property that can be set to any string."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"Object ",(0,o.mdx)("strong",{parentName:"p"},"properties")," "),(0,o.mdx)("p",{parentName:"blockquote"},"A property that allows setting of several properties at the same time.")),(0,o.mdx)("h3",{id:"methods"},"Methods"),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,o.mdx)("strong",{parentName:"p"},"createThumbnailWithProperties"),"( String ",(0,o.mdx)("strong",{parentName:"p"},"previewText"),", Number ",(0,o.mdx)("strong",{parentName:"p"},"pointSize"),", ColorSpace ",(0,o.mdx)("strong",{parentName:"p"},"space"),", Number ",(0,o.mdx)("strong",{parentName:"p"},"colorValue"),", File ",(0,o.mdx)("strong",{parentName:"p"},"to")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Create thumbnail for selected text with the given properties."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"previewText"),(0,o.mdx)("td",{parentName:"tr",align:null},"Text to use as sample")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Number"),(0,o.mdx)("td",{parentName:"tr",align:null},"pointSize"),(0,o.mdx)("td",{parentName:"tr",align:null},"Text font size (in points)")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"ColorSpace"),(0,o.mdx)("td",{parentName:"tr",align:null},"space"),(0,o.mdx)("td",{parentName:"tr",align:null},"Color space RGB, CMYK or LAB")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Number"),(0,o.mdx)("td",{parentName:"tr",align:null},"colorValue"),(0,o.mdx)("td",{parentName:"tr",align:null},"Color values")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"File"),(0,o.mdx)("td",{parentName:"tr",align:null},"to"),(0,o.mdx)("td",{parentName:"tr",align:null},"The path to the export file."))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"setNthDesignAxis"),"( Number ",(0,o.mdx)("strong",{parentName:"p"},"nthAxisIndex"),", Number ",(0,o.mdx)("strong",{parentName:"p"},"nthAxisValue")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Set Nth design axis of a variable font."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-1"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Number"),(0,o.mdx)("td",{parentName:"tr",align:null},"nthAxisIndex"),(0,o.mdx)("td",{parentName:"tr",align:null},"Index of design axis.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Number"),(0,o.mdx)("td",{parentName:"tr",align:null},"nthAxisValue"),(0,o.mdx)("td",{parentName:"tr",align:null},"Value of nth design axis."))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,o.mdx)("strong",{parentName:"p"},"isNthDesignAxisHidden"),"( Number ",(0,o.mdx)("strong",{parentName:"p"},"nthAxisIndex")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"If true, Nth design axis of variable font is hidden."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-2"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Number"),(0,o.mdx)("td",{parentName:"tr",align:null},"nthAxisIndex"),(0,o.mdx)("td",{parentName:"tr",align:null},"Index of design axis."))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"remove"),"( CharacterStyle ",(0,o.mdx)("strong",{parentName:"p"},"replacingWith")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Deletes the style."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-3"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"CharacterStyle"),(0,o.mdx)("td",{parentName:"tr",align:null},"replacingWith"),(0,o.mdx)("td",{parentName:"tr",align:null},"The style to apply in place of the deleted style. (Optional)"))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"CharacterStyle ",(0,o.mdx)("strong",{parentName:"p"},"duplicate"),"()"),(0,o.mdx)("p",{parentName:"blockquote"},"Duplicates the CharacterStyle."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"CharacterStyle ",(0,o.mdx)("strong",{parentName:"p"},"move"),"( LocationOptions ",(0,o.mdx)("strong",{parentName:"p"},"to"),", Mixed ",(0,o.mdx)("strong",{parentName:"p"},"reference")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Moves the style to the specified location."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-4"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"LocationOptions"),(0,o.mdx)("td",{parentName:"tr",align:null},"to"),(0,o.mdx)("td",{parentName:"tr",align:null},"The location relative to the reference object or within the containing object.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,o.mdx)("td",{parentName:"tr",align:null},"reference"),(0,o.mdx)("td",{parentName:"tr",align:null},"The reference object. Note: Required when the to parameter specifies before or after. Can accept: ParagraphStyle, ParagraphStyleGroup, CharacterStyle, CharacterStyleGroup, CellStyle, CellStyleGroup, TableStyle, TableStyleGroup, Document or Application. (Optional)"))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"insertLabel"),"( String ",(0,o.mdx)("strong",{parentName:"p"},"key"),", String ",(0,o.mdx)("strong",{parentName:"p"},"value")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Sets the label to the value associated with the specified key."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-5"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"key"),(0,o.mdx)("td",{parentName:"tr",align:null},"The key.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"value"),(0,o.mdx)("td",{parentName:"tr",align:null},"The value."))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"String ",(0,o.mdx)("strong",{parentName:"p"},"extractLabel"),"( String ",(0,o.mdx)("strong",{parentName:"p"},"key")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Gets the label value associated with the specified key."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-6"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"key"),(0,o.mdx)("td",{parentName:"tr",align:null},"The key."))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"String ",(0,o.mdx)("strong",{parentName:"p"},"toSource"),"()"),(0,o.mdx)("p",{parentName:"blockquote"},"Generates a string which, if executed, will return the CharacterStyle."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"CharacterStyle ",(0,o.mdx)("strong",{parentName:"p"},"getElements"),"()"),(0,o.mdx)("p",{parentName:"blockquote"},"Resolves the object specifier, creating an array of object references."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"String ",(0,o.mdx)("strong",{parentName:"p"},"toSpecifier"),"()"),(0,o.mdx)("p",{parentName:"blockquote"},"Retrieves the object specifier."),(0,o.mdx)("hr",{parentName:"blockquote"}),(0,o.mdx)("p",{parentName:"blockquote"},"EventListener ",(0,o.mdx)("strong",{parentName:"p"},"addEventListener"),"( String ",(0,o.mdx)("strong",{parentName:"p"},"eventType"),", Mixed ",(0,o.mdx)("strong",{parentName:"p"},"handler"),", Boolean ",(0,o.mdx)("strong",{parentName:"p"},"captures")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Adds an event listener."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-7"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"eventType"),(0,o.mdx)("td",{parentName:"tr",align:null},"The event type.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,o.mdx)("td",{parentName:"tr",align:null},"handler"),(0,o.mdx)("td",{parentName:"tr",align:null},"The event handler. Can accept: File or JavaScript Function.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,o.mdx)("td",{parentName:"tr",align:null},"captures"),(0,o.mdx)("td",{parentName:"tr",align:null},"This parameter is obsolete. (Optional)"))))),(0,o.mdx)("hr",null),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"Boolean ",(0,o.mdx)("strong",{parentName:"p"},"removeEventListener"),"( String ",(0,o.mdx)("strong",{parentName:"p"},"eventType"),", Mixed ",(0,o.mdx)("strong",{parentName:"p"},"handler"),", Boolean ",(0,o.mdx)("strong",{parentName:"p"},"captures")," )"),(0,o.mdx)("p",{parentName:"blockquote"},"Removes the event listener."),(0,o.mdx)("h4",{parentName:"blockquote",id:"parameters-8"},"Parameters"),(0,o.mdx)("table",{parentName:"blockquote"},(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"eventType"),(0,o.mdx)("td",{parentName:"tr",align:null},"The registered event type.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Mixed"),(0,o.mdx)("td",{parentName:"tr",align:null},"handler"),(0,o.mdx)("td",{parentName:"tr",align:null},"The registered event handler. Can accept: File or JavaScript Function.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,o.mdx)("td",{parentName:"tr",align:null},"captures"),(0,o.mdx)("td",{parentName:"tr",align:null},"This parameter is obsolete. (Optional)"))))))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-omv-c-character-style-index-md-ca94e7bcae44f0f6fe54.js.map