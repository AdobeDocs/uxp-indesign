{"version":3,"file":"component---src-pages-omv-c-change-object-preference-index-md-1a678800c05337cc12ad.js","mappings":"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","sources":["webpack://uxp-indesign/./src/pages/omv/c/ChangeObjectPreference/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign/uxp-indesign/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"changeobjectpreference\"\n    }}>{`ChangeObjectPreference`}</h1>\n    <p>{`Change object preferences.`}</p>\n    <h2 {...{\n      \"id\": \"instance\"\n    }}>{`Instance`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`transparencySettings`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Transparency settings. Can return: FindChangeTransparencySetting or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeTransparencySettings`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Transparency settings for the stroke. Can return: FindChangeStrokeTransparencySetting or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fillTransparencySettings`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Transparency settings for the fill applied to the ChangeObjectPreference. Can return: FindChangeFillTransparencySetting or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`contentTransparencySettings`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Transparency settings for the content of the ChangeObjectPreference. Can return: FindChangeContentTransparencySetting or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`userModifiedWrap`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the text wrap path has been explicitly modified by the user. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`isValid`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Returns true if the object specifier resolves to valid objects.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Application `}<strong parentName=\"p\">{`parent`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The parent of the ChangeObjectPreference (a Application).`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Preferences `}<strong parentName=\"p\">{`preferences`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of preferences objects.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Events `}<strong parentName=\"p\">{`events`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of events.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`EventListeners `}<strong parentName=\"p\">{`eventListeners`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of event listeners.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`storyDirection`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The direction of the story. Can return: StoryDirectionOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`positionReferencePoint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The point in the referenced object relative to which to position the anchored object. Notes: Valid only when anchored position is custom. Can return: AnchorPoint enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`applyToMasterPageOnly`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, text wraps on the master spread apply to that spread only, and not to any pages the master spread has been applied to. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textWrapSide`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Text wrap side options. Can return: TextWrapSideOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textWrapOffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The minimum space between text and the edges of the wrapped object. Specify four values in the format `}{`[top, left, bottom, right]`}{`. . Can return: Ordered array containing top:Unit, left:Unit, bottom:Unit, right:Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textWrapMode`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The text wrap mode. . Can return: TextWrapModes enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`footnotesEnableOverrides`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, enable overrides to document footnote options. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`footnotesSpanAcrossColumns`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, enable straddling footnotes. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`footnotesMinimumSpacing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Minimum Spacing Before First Footnote. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`footnotesSpaceBetween`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Space between footnotes. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`appliedObjectStyles`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The applied object style(s). Can return: String or NothingEnum enumerator. Can also accept: ObjectStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the fill of the ChangeObjectPreference. . Can return: Swatch or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The percent of tint to use in the ChangeObjectPreference's fill color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`overprintFill`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the ChangeObjectPreference's fill color overprints any underlying objects. If false, the fill color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The weight (in points) to apply to the ChangeObjectPreference's stroke. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`miterLimit`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The limit of the ratio of stroke width to miter length before a miter (pointed) join becomes a bevel (squared-off) join. Can return: Real (1 - 500) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`endCap`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The end shape of an open path. Can return: EndCap enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`endJoin`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The corner join applied to the ChangeObjectPreference. Can return: EndJoin enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The name of the stroke style to apply. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeCornerAdjustment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The corner adjustment applied to the ChangeObjectPreference. Can return: StrokeCornerAdjustment enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeDashAndGap`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The dash and gap measurements that define the pattern of a custom dashed line. Define up to six values (in points) in the format `}{`[dash1, gap1, dash2, gap2, dash3, gap3]`}{`. Can return: Array of Units or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftLineEnd`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The arrowhead applied to the start of the path. . Can return: ArrowHead enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightLineEnd`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The arrowhead applied to the end of the path. Can return: ArrowHead enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the stroke of the ChangeObjectPreference. Can return: Swatch or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The percent of tint to use in object's stroke color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`overprintStroke`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the ChangeObjectPreference's stroke color overprints any underlying objects. If false, the stroke color knocks out the  underlying colors. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of a dashed, dotted, or striped stroke. For information, see stroke type. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint as a percentage of the gap color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`overprintGap`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color overprints any underlying colors. If false, the gap color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`strokeAlignment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke alignment applied to the ChangeObjectPreference. Can return: StrokeAlignment enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`nonprinting`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the ChangeObjectPreference does not print. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gradientFillAngle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The angle of a linear gradient applied to the fill of the ChangeObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gradientStrokeAngle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The angle of a linear gradient applied to the stroke of the ChangeObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textColumnCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns in the text frame. Note: Depending on the value of use fixed column width, the number of columns can change automatically when the text frame size changes. Can return: Long Integer (1 - 40) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textColumnGutter`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The space between columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textColumnFixedWidth`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The column width of the columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useFixedColumnWidth`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, maintains column width when the text frame is resized. If false, causes columns to resize when the text frame is resized. Note: When true, resizing the frame can change the number of columns in the frame. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`insetSpacing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount to offset text from the edges of the text frame, specified either as a single value applied uniformly to all sides of the text frame or as an array of 4 values in the format `}{`[top inset, left inset, bottom inset, right inset]`}{`. Can return: Unit (0 - 8640 points), Array of 4 Units (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`firstBaselineOffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The distance between the baseline of the text and the top inset of the text frame or cell. Can return: FirstBaseline enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`minimumFirstBaselineOffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The minimum distance between the baseline of the text and the top inset of the text frame or cell. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`verticalJustification`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The vertical alignment of the text content. . Can return: VerticalJustification enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`verticalThreshold`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The maximum amount of vertical space between two paragraphs. Note: Valid only when vertical justification is justified; the specified amount is applied in addition to the space before or space after values defined for the paragraph. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`ignoreWrap`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, ignores text wrap settings for drawn or placed objects in the text frame. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useCustomBaselineFrameGrid`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, uses a custom baseline frame grid. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`startingOffsetForBaselineFrameGrid`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount to offset the baseline grid. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`baselineFrameGridRelativeOption`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The location (top of page, top margin, top of frame, or frame inset) on which to base the custom baseline grid. Can return: BaselineFrameGridRelativeOption enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`baselineFrameGridIncrement`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The distance between grid lines. Can return: Unit (1 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`baselineFrameGridColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The grid line color, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals (0 - 255) or UIColors enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`inverse`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, inverts the text wrap. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`contourType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The contour type. Can return: ContourOptionsTypes enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`includeInsideEdges`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, creates interior clipping paths within the surrounding clipping path. Note: Valid only when clipping type is alpha channel or detect edges. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`anchoredPosition`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The position of the anchored object relative to the anchor. Can return: AnchorPosition enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`spineRelative`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the position of the anchored object is relative to the binding spine of the page or spread. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`lockPosition`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, prevents manual positioning of the anchored object. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`pinPosition`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, pins the position of the anchored object within the text frame top and bottom. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`anchorPoint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The point in the anchored object to position. Can return: AnchorPoint enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`horizontalReferencePoint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The horizontal reference point on the page. Valid only when anchored position is custom. Can return: AnchoredRelativeTo enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`verticalReferencePoint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The vertical reference point on the page. Valid when anchored position is custom. Can return: VerticallyRelativeTo enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`anchorXoffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The horizontal (x) offset of the anchored object. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`anchorYoffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The vertical (y) offset of the anchored object. Corresponds to the space after property for above line positioning. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`anchorSpaceAbove`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The space above an above-line anchored object. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`opticalMarginAlignment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, adjust the position of characters at the edges of the frame to provide a better appearance. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`opticalMarginSize`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The point size used as the basis for calculating optical margin alignment. (Range: 0.1 to 1296). Can return: Unit (0.1 - 1296 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftCrop`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount in measurement units to crop the left edge of a graphic. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topCrop`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount in measurement units to crop the top edge of a graphic. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightCrop`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount in measurement units to crop the right edge of a graphic. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomCrop`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The amount in measurement units to crop the bottom edge of a graphic. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fittingOnEmptyFrame`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The frame fitting option to apply to placed or pasted content if the frame is empty. Can be applied to a frame, object style, or document or to the application. Can return: EmptyFrameFittingOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fittingAlignment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The point with which to align the image empty when fitting in a frame. For information, see frame fitting options. Can return: AnchorPoint enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`arrowHeadAlignment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The arrowhead alignment applied to the ChangeObjectPreference. Can return: ArrowHeadAlignmentEnum enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftArrowHeadScale`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The scaling applied to the arrowhead at the start of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightArrowHeadScale`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The scaling applied to the arrowhead at the end of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topLeftCornerOption`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The shape to be applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes.Note: corner option differs from end join in which you can set a radius for a corner option, whereas the rounded or beveled effect of an end join depends on the stroke weight. Can return: CornerOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topRightCornerOption`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The shape to apply to the top right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomLeftCornerOption`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The shape to apply to the bottom left corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomRightCornerOption`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The shape to apply to the bottom right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topLeftCornerRadius`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The radius in measurement units of the corner effect applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topRightCornerRadius`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The radius in measurement units of the corner effect applied to the top right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomLeftCornerRadius`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The radius in measurement units of the corner effect applied to the bottom left corner of rectangular shapes. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomRightCornerRadius`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The radius in measurement units of the corner effect applied to the bottom right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`autoSizingType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Auto-sizing type of text frame. Based on type, reference value is automatically adjusted. For example, for height only type, top-left reference point becomes top-center. Recommended to change auto-sizing type, after setting other auto-sizing attributes. Can return: AutoSizingTypeEnum enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`autoSizingReferencePoint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The reference point for auto sizing of text frame. Reference point is automatically adjusted to the suitable value depending on the auto-sizing type value. As an example, top left reference point becomes top center for height only dimension. Can return: AutoSizingReferenceEnum enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useMinimumHeightForAutoSizing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, minimum height value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`minimumHeightForAutoSizing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The minimum height for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useMinimumWidthForAutoSizing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, minimum width value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`minimumWidthForAutoSizing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The minimum width for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useNoLineBreaksForAutoSizing`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, line-breaks are not introduced after auto sizing. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`preserveAppearanceFromLayout`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Preserve Appearance from Layout. Can return: PreserveAppearanceFromLayoutEnum enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`altTextSourceType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The source type of alternate text. Can return: SourceType enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`actualTextSourceType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The source type of actual text. Can return: SourceType enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`customAltText`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The custom alternate text entered by the user. Can return: String or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`customActualText`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The custom actual text entered by the user. Can return: String or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`altMetadataProperty`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The metadata property to use as source of alternate text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`actualMetadataProperty`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The metadata property to use as source of actual text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`applyTagType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tag type of page item. Can return: TagType enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imageConversionType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Allows user to select the image format for conversion. Can return: ImageFormat enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imageExportResolution`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The export resolution. Can return: ImageResolution enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gifOptionsPalette`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color palette for GIF conversion. Note: Not valid when image conversion is JPEG. . Can return: GIFOptionsPalette enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gifOptionsInterlaced`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, generates interlaced GIFs. Note: Not valid  when image conversion is JPEG. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`jpegOptionsQuality`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The quality of converted JPEG images. Note: Not valid when image conversion is GIF. . Can return: JPEGOptionsQuality enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`jpegOptionsFormat`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The formatting method for converted JPEG images. Note: Not valid  when image conversion is GIF. Can return: JPEGOptionsFormat enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imageAlignment`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Alignment applied to images. Can return: ImageAlignmentType enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imageSpaceBefore`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Space Before applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imageSpaceAfter`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Space After applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`useImagePageBreak`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, image page break settings will be used in objects. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`imagePageBreak`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Image page break settings to be used with objects. Can return: ImagePageBreakType enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Object `}<strong parentName=\"p\">{`properties`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A property that allows setting of several properties at the same time.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`altText`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Provides the alternate text for the object`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`actualText`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Provides the actual text for the object`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSource`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Generates a string which, if executed, will return the ChangeObjectPreference.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`ChangeObjectPreference `}<strong parentName=\"p\">{`getElements`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Resolves the object specifier, creating an array of object references.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSpecifier`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Retrieves the object specifier.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`EventListener `}<strong parentName=\"p\">{`addEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Adds an event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`removeEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Removes the event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-1\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}