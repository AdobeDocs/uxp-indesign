"use strict";(self.webpackChunkuxp_indesign=self.webpackChunkuxp_indesign||[]).push([[1111],{38388:function(t,e,a){a.r(e),a.d(e,{_frontmatter:function(){return m},default:function(){return d}});var n=a(87462),r=a(63366),p=(a(15007),a(64983)),l=a(91515),i=["components"],m={},s={_frontmatter:m},o=l.Z;function d(t){var e=t.components,a=(0,r.Z)(t,i);return(0,p.mdx)(o,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,p.mdx)("h1",{id:"migrating-existing-javascriptextendscript-to-uxp-script"},"Migrating existing JavaScript(ExtendScript) to UXP Script"),(0,p.mdx)("p",null,"This page goes over how Javascripts can be converted to UXP script in simple steps."),(0,p.mdx)("ol",null,(0,p.mdx)("li",{parentName:"ol"},"Save the file with .idjs extension."),(0,p.mdx)("li",{parentName:"ol"},"Update the script for unsupported methods")),(0,p.mdx)("table",null,(0,p.mdx)("thead",{parentName:"table"},(0,p.mdx)("tr",{parentName:"thead"},(0,p.mdx)("th",{parentName:"tr",align:null},"SI"),(0,p.mdx)("th",{parentName:"tr",align:null},"Differences"),(0,p.mdx)("th",{parentName:"tr",align:null},"JavaScript(Objects also haveExtend Script)"),(0,p.mdx)("th",{parentName:"tr",align:null},"UXP Script"))),(0,p.mdx)("tbody",{parentName:"table"},(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"SI"),(0,p.mdx)("td",{parentName:"tr",align:null},"Differences"),(0,p.mdx)("td",{parentName:"tr",align:null},"JavaScript(Objects also haveExtend Script)"),(0,p.mdx)("td",{parentName:"tr",align:null},"UXP Script")),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"1"),(0,p.mdx)("td",{parentName:"tr",align:null},"subscript operator ","[ ]",":Collection objects returned by InDesign like documents and paragraphs will not support subscript operator ","[ ]"," to access element at a particular index.The alternative is to use the method by name item()Objects like app.selection which is of type Array will support subscript operator."),(0,p.mdx)("td",{parentName:"tr",align:null},"for (j = 0; j ","<"," app.selection","[0]",".paragraphs.length; j++){"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","var"," "," item = app.selection","[0]",".paragraphs","[j]",";}"),(0,p.mdx)("td",{parentName:"tr",align:null},"for (j = 0; j ","<"," app.selection","[0]",".paragraphs.length; j++){"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","var"," "," item = app.selection","[0]",".paragraphs.item(j);}")),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"2"),(0,p.mdx)("td",{parentName:"tr",align:null},'Object.constructor.name:Object.constructor.name which is a standard property in JS will return empty string ("") for InDesign scripting DOM objects. Alternative is to use the object.constructorName property.'),(0,p.mdx)("td",{parentName:"tr",align:null},"switch(myPageItem.constructor.name){"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",' case "Rectangle":'," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",' case "Oval":'," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ..."," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," break;"," "," "," ","}"),(0,p.mdx)("td",{parentName:"tr",align:null},"switch(myPageItem.constructorName){"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",' case "Rectangle":'," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",' case "Oval":'," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ..."," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," break;"," "," "," ","}")),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"3"),(0,p.mdx)("td",{parentName:"tr",align:null},"Comparison operators(== and ===):Comparison operators(== and ===) on InDesign DOM objects will always return false unless the objects have same reference. Instead use method equals()"),(0,p.mdx)("td",{parentName:"tr",align:null},"if (myPath.pathType == PathType.closedPath) { ... }"),(0,p.mdx)("td",{parentName:"tr",align:null},"if (myPath.pathType.equals(PathType.closedPath)) { ... }")),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"4"),(0,p.mdx)("td",{parentName:"tr",align:null},"instanceof:The instanceof keyword isn't supported for InDesign DOM objects. Instead using object.constructorName property."),(0,p.mdx)("td",{parentName:"tr",align:null},"if (app.selection","[0]",".paragraphs","[0]",".appliedParagraphStyle.parent instanceofParagraphStyleGroup) { ... }"),(0,p.mdx)("td",{parentName:"tr",align:null},"if (app.selection","[0]",'.paragraphs.item(0).parent.constructorName =="ParagraphStyleGroup") { ... }')),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"5"),(0,p.mdx)("td",{parentName:"tr",align:null},"Global object 'document':global object 'document' is unsupported now instead use app.activeDocument"),(0,p.mdx)("td",{parentName:"tr",align:null},"document.findText()"),(0,p.mdx)("td",{parentName:"tr",align:null},"app.activeDocument.findText()")),(0,p.mdx)("tr",{parentName:"tbody"},(0,p.mdx)("td",{parentName:"tr",align:null},"6"),(0,p.mdx)("td",{parentName:"tr",align:null},"ActiveScript: app.activeScript"),(0,p.mdx)("td",{parentName:"tr",align:null},"app.activeScript returns current running script as file object on which we can access other properties."),(0,p.mdx)("td",{parentName:"tr",align:null},"app.activeScript returns the path of the current script as a string. No other properties can be accessed on app.activeScript"," ")))))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-migrating-to-uxp-script-index-md-c6616cc9f9e0eb8193b1.js.map