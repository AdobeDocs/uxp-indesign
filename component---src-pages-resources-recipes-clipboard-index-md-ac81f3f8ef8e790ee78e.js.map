{"version":3,"file":"component---src-pages-resources-recipes-clipboard-index-md-ac81f3f8ef8e790ee78e.js","mappings":"mRAMaA,EAAe,CAAC,EACvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,EACMI,EAAcN,EAAc,eAC5BO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBT,gBAEIU,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIV,GAAKY,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOV,EAAAA,EAAAA,KAACI,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBN,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,eAG5EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,aAAW,cAEnBA,EAAAA,EAAAA,KAAA,+DACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,uBAAqB,wBAE7BA,EAAAA,EAAAA,KAAA,gHACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAI,6BACnBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAI,+BACnBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAI,mCAErBb,EAAAA,EAAAA,KAACC,EAAW,CAACa,QAAQ,OAAOC,MAAM,uBAAuBH,QAAQ,iBACjEZ,EAAAA,EAAAA,KAAA,iCACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,cAAwB,qCAAqCb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,aAA2B,6BAA6Bb,EAAAA,EAAAA,KAAA,WAAS,+BAA+BA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC1N,KAAQ,6DAA2D,wBACtC,yBACjCb,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,cAAwB,yBAAyBb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,aAA2B,8GAA8Gb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACvP,KAAQ,gCAA8B,iCACA,MAC1Cb,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAACE,EAAS,CAACa,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,mBAAmBL,QAAQ,eACjFZ,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eAAa,qsBAsB9Bb,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBAAe,sFAOhCb,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,qBAE1BA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAI,iGAErBb,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OAAKb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,KAC9B,KAAQ,0GAAwG,aAC9F,UAI5B,CAEAP,EAAWY,gBAAiB,C","sources":["webpack://uxp-indesign/./src/pages/resources/recipes/clipboard/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign/uxp-indesign/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"clipboard\"\n    }}>{`Clipboard`}</h1>\n    <p>{`Read and write content from and to the clipboard.`}</p>\n    <h2 {...{\n      \"id\": \"system-requirements\"\n    }}>{`System requirements`}</h2>\n    <p>{`Please make sure your local environment uses the following application versions before proceeding.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`InDesign v18.5 or higher`}</li>\n      <li parentName=\"ul\">{`UXP version v7.1 or higher`}</li>\n      <li parentName=\"ul\">{`Manifest version v5 or higher`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"header, text1, text2\" mdxType=\"InlineAlert\" />\n    <p>{`Plugins and Scripts`}</p>\n    <p><strong parentName=\"p\">{`In plugins`}</strong>{`, you should seek permission for `}<inlineCode parentName=\"p\">{`clipboard`}</inlineCode>{` access in the manifest. `}<br></br>{` IMPORTANT: Read about the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../plugins/concepts/manifest/#permissionsdefinition\"\n      }}>{`manifest permissions`}</a>{` before you proceed.`}</p>\n    <p><strong parentName=\"p\">{`In scripts`}</strong>{`, the permission for `}<inlineCode parentName=\"p\">{`clipboard`}</inlineCode>{` is fixed. You can ignore the manifest details in the following examples. Learn about these values in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../fundamentals/manifest/\"\n      }}>{`manifest fundamentals section`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JavaScript, JSON\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function foo() {\n    const clipboard = navigator.clipboard;\n\n    // Setting content for clipboard\n    clipboard.setContent({ 'text/plain': \"Test string to validate clipboard setContent\" })\n        .then(() => {\n            console.log(\"Data successfully set on clipboard\");\n        }, (error) => {\n            console.error(\"Error while setting data on clipboard:\", error);\n        });\n\n\n    // Reading from clipboard and printing\n    clipboard.getContent()\n        .then((result) => {\n            console.log(\\`Data from clipboard: \\${result[\"text/plain\"]}\\`);\n        }, (error) => {\n            console.error(\"Error while reading data from clipboard:\", error);\n        });\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"manifest\"\n    }}>{`manifest`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"requiredPermissions\": {\n        \"clipboard\": \"readAndWrite\"\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-notes\"\n    }}>{`Additional notes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Set the permission to \"read\" if your script/plugin only intends to read from the clipboard.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reference-material\"\n    }}>{`Reference material`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/uxp-indesign/indesign/uxp/reference/uxp-api/reference-js/Global%20Members/Data%20Transfers/Clipboard/\"\n        }}>{`Clipboard`}</a>{` APIs`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}