{"version":3,"file":"component---src-pages-recipes-dom-versioning-index-md-3d4f0138f2fca6f32303.js","mappings":"oRAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,qBAE1BA,EAAAA,EAAAA,KAAA,yJAAmJA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC7J,KAAQ,mCAAiC,gBACpB,OACzBX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,QAAQ,OAAOC,MAAM,eAAeH,QAAQ,iBACzDV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,iBAA2B,uFACpDX,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,iBAA2B,yHACpDX,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,iOACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,wEAI9BX,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,gBAErBA,EAAAA,EAAAA,KAAA,8ZACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,8JACzBX,EAAAA,EAAAA,KAAA,+DACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,qHAK9BX,EAAAA,EAAAA,KAAA,kGACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,6EAI9BX,EAAAA,EAAAA,KAAA,wJACAA,EAAAA,EAAAA,KAAA,oFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,gPAQ9BX,EAAAA,EAAAA,KAAA,gGACAA,EAAAA,EAAAA,KAAA,sEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,yFAMlC,CAEAP,EAAWU,gBAAiB,C","sources":["webpack://uxp-indesign/./src/pages/recipes/dom-versioning/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign/uxp-indesign/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"uxp-indesign-dom\"\n    }}>{`UXP InDesign DOM`}</h1>\n    <p>{`InDesign DOM provides APIs to create and modify InDesign application content through UXP scripting. You can find more details about this at `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-indesign/indesign/dom/api/\"\n      }}>{`InDesign API`}</a>{`. `}</p>\n    <InlineAlert variant=\"info\" slots=\"text1, text2\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Prior to 18.4`}</strong>{`, the InDesign DOM was available in the global space of the UXP script by default.`}</p>\n    <p><strong parentName=\"p\">{`Starting 18.4`}</strong>{`, InDesign DOM is now available as a Javascript module, and it can be retrieved on a need basis using require() API.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The following code retrieves the InDesign DOM from 18.4 release onwards. This object allows you to open documents, modify them, run menu items, and more using the latest DOM version supported by the application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let myInDesign = require(\"indesign\");\nlet app = myInDesign.app;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dom-version\"\n    }}>{`DOM version`}</h2>\n    <p>{`DOM versioning refers to the specific version of InDesign Document Object Model supported by scripting language. It ensures that scripts remain forward compatible. By specifying the appropriate DOM version in the scripts, it is ensured that scripts will work with newer versions of InDesign, even if DOM has changed in subsequent releases. The available DOM versions as of today are mentioned below -`}</p>\n    <p><strong parentName=\"p\">{`3.0, 4.0, 5.0, 6.0, 7.0, 7.5, 8.0, 9.0, 10.0, 10.1, 10.2, 11.0, 11.2, 11.3, 11.4, 12.0, 12.1, 13.0, 13.1, 14.0, 15.0, 15.1, 16.0, 16.1, 16.2, 17.0, 18.0`}</strong></p>\n    <p>{`Below API can be used to inspect the DOM version.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let myInDesign = require(\"indesign\");\nlet app = myInDesign.app;\nconsole.log(app.scriptPreferences.version);\n`}</code></pre>\n    <p>{`It is possible to retrieve the DOM of particular version by specifying it as below. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let myInDesign = require(\"indesign-16.1\");\nlet app = myInDesign.app;\n`}</code></pre>\n    <p>{`If we retrieved a specific DOM version (lets assume 'A')  and then did require(\"indesign\"), then it will fetch the same DOM version 'A'.`}</p>\n    <p>{`In the below example, id1 and id0 will represent the DOM version 17.0.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let myInDesign0 = require(\"indesign-17.0\")\nlet app0 = myInDesign0.app;\nlet myInDesign1 = require(\"indesign\");\nlet app1 = myInDesign1.app;\nconsole.log(app0.scriptPreferences.version);\nconsole.log(app1.scriptPreferences.version);\n`}</code></pre>\n    <p>{`It is not possible to retrieve different DOM versions in a single script instance.`}</p>\n    <p>{`In the below example id1 will be evaluated as undefined.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let myInDesign0 = require(\"indesign\")\nlet myInDesign1 = require(\"indesign-17.0\");\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}